/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 public/models/Cat.gltf -o public/models/Cat.jsx -r public 
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export function Cat({ hovered, ...props }) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/Cat.gltf')
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    const anim = hovered ? 'Bite_Front' : 'Idle'
    actions[anim].reset().fadeIn(0.5).play();
    return () => actions[anim].fadeOut(0.5);
  }, [hovered])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Body} />
          <primitive object={nodes.Head} />
          <group name="Cat_Blob">
            <skinnedMesh name="Cube187" geometry={nodes.Cube187.geometry} material={materials.Cat_Main} skeleton={nodes.Cube187.skeleton} />
            <skinnedMesh name="Cube187_1" geometry={nodes.Cube187_1.geometry} material={materials.Cat_Secondary} skeleton={nodes.Cube187_1.skeleton} />
            <skinnedMesh name="Cube187_2" geometry={nodes.Cube187_2.geometry} material={materials.Ears} skeleton={nodes.Cube187_2.skeleton} />
            <skinnedMesh name="Cube187_3" geometry={nodes.Cube187_3.geometry} material={materials.Eye_Black} skeleton={nodes.Cube187_3.skeleton} />
            <skinnedMesh name="Cube187_4" geometry={nodes.Cube187_4.geometry} material={materials.Eye_White} skeleton={nodes.Cube187_4.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/Cat.gltf')
